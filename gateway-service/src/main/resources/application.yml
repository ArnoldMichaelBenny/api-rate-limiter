server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: gateway-service
  aop:
    auto: true
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

logging:
  level:
    com.ratelimiter.gateway_service: DEBUG
    com.ratelimiter.gateway_service.ratelimit: TRACE

# ================================================================
# API Keys (Environment Variables Recommended in Production)
# ================================================================
api:
  keys:
    - key: ${API_KEY_1:api-key-1}
      secret: ${API_SECRET_1:secret-1}
    - key: ${API_KEY_2:api-key-2}
      secret: ${API_SECRET_2:secret-2}
    - key: ${API_KEY_3:api-key-3}
      secret: ${API_SECRET_3:secret-3}
    - key: ${API_KEY_LOAD:api-key-load}   # High-throughput load testing key
      secret: ${API_SECRET_LOAD:secret-load}
    - key: ${API_KEY_LIMIT:api-key-limit} # Strict limit testing key
      secret: ${API_SECRET_LIMIT:secret-limit}

# ================================================================
# Rate Limiter Configurations
# ================================================================
rate-limiter:
  default-limit: ${RATE_LIMIT_DEFAULT:10}
  configs:
    - api-key: ${API_KEY_1:api-key-1}
      algorithm: fixed-window
      limit: ${RATE_LIMIT_KEY1:5}

    - api-key: ${API_KEY_2:api-key-2}
      algorithm: token-bucket
      limit: ${RATE_LIMIT_KEY2:200}
      refill-rate: ${RATE_REFILL_KEY2:50}

    - api-key: ${API_KEY_3:api-key-3}
      algorithm: sliding-window-log
      limit: ${RATE_LIMIT_KEY3:50}

    - api-key: ${API_KEY_LOAD:api-key-load}
      algorithm: token-bucket
      limit: ${RATE_LIMIT_LOAD:100000}
      refill-rate: ${RATE_REFILL_LOAD:100000}

    - api-key: ${API_KEY_LIMIT:api-key-limit}
      algorithm: token-bucket
      limit: ${RATE_LIMIT_LIMIT:5}
      refill-rate: ${RATE_REFILL_LIMIT:1}

# ================================================================
# Health Check Endpoint
# ================================================================
management:
  endpoints:
    web:
      exposure:
        include: health,info

# ================================================================
# External Service Configurations
# ================================================================
monitoring-service:
  url: ${MONITORING_SERVICE_URL:http://localhost:8081/api/v1}

# ================================================================
# Resilience4j Circuit Breaker
# ================================================================
resilience4j:
  circuitbreaker:
    instances:
      monitoring-service:
        failure-rate-threshold: 50
        sliding-window-type: COUNT_BASED
        sliding-window-size: 10
        wait-duration-in-open-state: 5s
